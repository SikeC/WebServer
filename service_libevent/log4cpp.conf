#log4cpp的配置文件
#首先是你创建的category 例如 log4cpp.category = PROPERTY,appendername
#然后是配置你加的appender 先选择哪种Appender 有几种 ConsoleAppender 流式输出 FileAppender 文件输出 RollingFileAppender 回卷式文件输出（当写到指定大小后文件从开头重写）
#然后配置appender的layout 也有几种：
#BasicLayout 基础布局 （1248337987 ERROR  : Hello log4cpp in a Error Message!）
#PatternLayout 使用格式化字符布局 ：
#%c category；
#%d 日期；日期可以进一步的设置格式，用花括号包围，例如%d{%H:%M:%S,%l} 或者 %d{%d %m %Y %H:%M:%S,%l}。如果不设置具体日期格式，则如下默认格式被使用“Wed Jan 02 02:03:55 1980”。日期的格式符号与ANSI C函数strftime中的一致。但增加了一个格式符号%l，表示毫秒，占三个十进制位。
#%m 消息；
#%n 换行符，会根据平台的不同而不同，但对于用户透明；
#%p 优先级；
#%r 自从layout被创建后的毫秒数；
#%R 从1970年1月1日0时开始到目前为止的秒数；
#%u 进程开始到目前为止的时钟周期数；
#%x NDC。
#还有的就不是很常用了

#这就只是配置了一个root的Category个人够用

log4cpp.rootCategory=DEBUG,rootAppender
log4cpp.appender.rootAppender=FileAppender
log4cpp.appender.rootAppender.fileName=service.log
log4cpp.appender.rootAppender.layout=PatternLayout
log4cpp.appender.rootAppender.layout.ConversionPattern=%d(%t)[%p]: %m%n